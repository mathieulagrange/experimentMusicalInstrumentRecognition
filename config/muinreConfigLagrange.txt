%% USER

% email address ticked when processing is done server side (leave empty for no mailing service), can be a cell array of email adresses
emailAddress  = mathieu.lagrange@cnrs.fr
% complete name of user
completeName  = Mathieu Lagrange


%% HOSTNAMES AND PATHS

% names of the machines
machineNames  = {{ 'pc-lagrange', 'dodo', 'toto'}, {'pc-adtsi-sunda.irccyn.ec-nantes.fr', 'pc-adtsi-optimed.irccyn.ec-nantes.fr'}}
% path to input data
inputPath  = ~/data/databases/instruments
% path to the code repository of the project
codePath  = /home/lagrange/bb/houle/dev/experiments/musicalInstrumentRecognition
% path to the data repository of the project for stored data
dataPath  = ~/data/projects/musicalInstrumentRecognition
% path to the data repository of the project for observation data (same as dataPath if left blank)
obsPath  = 
% path to backup of transfered data
backupPath  = /tmp/expCodeBackup/musicalInstrumentRecognition
% path to export bundles
bundlePath  = /tmp/musicalInstrumentRecognition
% path to matlab
matlabPath  = {'/usr/local/MATLAB/R2013a/bin', ''}
% path to unix tools (pdflatex, rsync, ssh)
toolPath  = {{'/usr/bin', 'C:/cygwin/bin'}}

%% CODE

% code dependencies to load and export
dependencies  = {'~/bb/houle/dev/tools/expCode/expCode', '~/bb/houle/dev/thirdParty/rastamat', '~/bb/houle/dev/thirdParty/libsvm-3.20'}
% dependencies (including expCode) can be part of the project: 0 do not use local versions, 1 use local versions, 2 update local versions
localDependencies  = 0
% version tag
codeVersion  = 0.1

%% COMPUTING

% processing steps to execute: -1 none, 0 all, >0 processing step by numeric id
do  = -1
% do not perform computation if data and obs files with runID>resume are already there
resume = 0
% use parallel processing, if |parallel|>1 specify the number of cores, if array set at step level, if >0 parallelize designs, if <0 parallelize within each design, can be a value for all processing steps or an array of config per step
parallel  = 0
% factor mask: cell array defining the modalities to be set for the factors (0 do all, 1 first modality, [1 3] first and third modality), can be a cell array of cell array
mask  = {}
% cell array of couples of string and array, if the string is parsed in a mask definition it gets replaced by the specified array
maskPatch  = {}
% set a experiment design: assume cell array of {[factors as numericIds], number of values per factor (0 complete set of values), type of plan as string 'f' (factorial) or 'o' (one factor at a time), [seed as a vector of index of factor]}
design  = 
% dummy mode
dummy  = 0
% set the random seed at init for replicability
setRandomSeed  = 0

% host index to run the experiment: 0: seek by hostName, >0: server mode, <0: local mode
host  = 0
% log level (set to 0 for no log)
log  = 1
% show processing progress 0: none, 1: bar if on local mode, 2: verbose output, 3: liminar output
progress  = 1
% exit matlab at the end of the computation
exitMatlab  = 0
% show timing observations
recordTiming  = 1

%% DATA

% encoding type of mat files (doc save for specs)
encodingVersion  = 7.3
% attempt to perform computation to be stored: (1, 0) load data of previous step, (-1, 0) load data result of the current step
store  = 1
% attempt to retrieve needed data server side: -1 no retrieval, 0 global scan, >0 hostId
retrieve  = -1
% naming convention for files: long (long naming as default), short (short naming), hash (hash based naming)
namingConventionForFiles  = hash
% sync data across machines:
sync  = {}
% generate bundle of code and/or data
bundle  = 
% clean data repositories
clean  = 


%% EXPOSITION

% step for which to display observations: -1 none, 0 last processed step if any, >0 specific step
display = 0
% specify default display of observations (>: prompt, t: table, p:plot)
expose  = >
% mantissa precision for the display of observations
tableDigitPrecision  = 2
% font size for the display of observations
displayFontSize  = 16



%% REPORT

% generate report: combination of r (run report), c (LaTEX compilation), and d (compilation debug informations)
report  = 
% type of report: empty (default), if containing the word slides or Slides, use the beamer presentation mode
reportName  = 
% style of latex document (warning: this parameter is taken into account only at the creation of the LaTEX report file)
latexDocumentClass  = tufte-handout
% path to the pdf viewer (try to locate one if left empty)
pdfViewer  = 
% threshold for statistical significance testing
significanceThreshold  = 0.05
% show the factors graph in the report: 1 simple display, 2 show stored data, 3 show observations, 4 show stored data and observations (if negative only generate the figure)
showFactorsInReport  = 4
% style of the factor graph: 0 no propagation of factors, 1 propagation of factors, 2 propagation of factors with an "all steps" node
factorDisplayStyle  = 0
% path where saved figures are copied
figureCopyPath  = 
% path where saved tables are copied
tableCopyPath  = 

%% MISC

% usage of default expcode smtp. If set to 0 assume availability of local stmp server
useExpCodeSmtp  = 1
% send email: -2, server mode, email at start and end, -1 server mode, email at end, 0, no email ever, 1 one email at end, 2 email at start and end
sendMail  = -2
% probe tools and paths
probe  = 0
% regenerate root file of the project
generateRootFile  = 0
% add a factor to the experiment: {'name', 'modalities', defaultModalityId, 'steps', 'selector', rankInFactorFile}
addFactor =
% remove a factor from the experiment: {rankInFactorFile, defaultModalityId}
removeFactor =
% add a step to the experiment: {'name', rank}
addStep =
% remove a given step from the experiment: rank
removeStep =

projectName = musicalInstrumentRecognition
shortProjectName = muinre
userName = lagrange
